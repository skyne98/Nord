{
    "definitions": {
        "Node": {
            
        },
        "Document": {
            "parent": "Node",
            "parameters": {
                "statements": "SyntaxStatementTopLevel[]"
            }
        },
        "DestructuringPattern": {
            "parent": "Node"
        },
        "DestructuringPatternBindingElement": {
            "parent": "Node",
            "parameters": {
                "alias": "Either<string, SyntaxDestructuringPattern>",
                "property": "string"
            }
        },
        "DestructuringArrayPattern": {
            "parent": "DestructuringPattern",
            "parameters": {
                "aliases": "Either<string, SyntaxDestructuringPattern>[]",
                "rest": "Option<string>"
            }
        },
        "DestructuringTuplePatternNode": {
            "parent": "DestructuringPattern",
            "parameters": {
                "aliases": "Either<string, SyntaxDestructuringPattern>[]",
                "rest": "Option<string>"
            }
        },
        "DestructuringObjectPattern": {
            "parent": "DestructuringPattern",
            "parameters": {
                "bindingElements": "SyntaxDestructuringPatternBindingElement[]",
                "rest": "Option<string>"
            }
        },
        "Statement": {
            "parent": "Node"
        },
        "StatementExpression": {
            "parent": "Statement",
            "parameters": {
                "expression": "SyntaxExpression"
            }
        },
        "StatementFunction": {
            "parent": "Statement",
            "parameters": {
                "name": "string",
                "typeParameters": "SyntaxTypeParameter[]",
                "parameters": "SyntaxTypeDeclarator[]",
                "return": "Option<SyntaxTypeReference>",
                "body": "SyntaxStatement[]"
            }
        },
        "StatementReturn": {
            "parent": "Statement",
            "parameters": {
                "expression": "SyntaxExpression"
            }
        },
        "StatementBreak": {
            "parent": "Statement"
        },
        "StatementContinue": {
            "parent": "Statement"
        },
        "StatementLoop": {
            "parent": "Statement",
            "parameters": {
                "body": "SyntaxStatement[]"
            }
        },
        "StatementLet": {
            "parent": "Statement",
            "parameters": {
                "expression": "SyntaxExpression"
            }
        },
        "StatementLetDestructuring": {
            "parent": "StatementLet",
            "parameters": {
                "pattern": "SyntaxDestructuringPattern"
            }
        },
        "StatementLetDeclarator": {
            "parent": "StatementLet",
            "parameters": {
                "declarator": "SyntaxTypeDeclarator"
            }
        },
        "StatementClassDeclaration": {
            "parent": "Statement",
            "parameters": {
                "name": "string",
                "body": "SyntaxStatementTopLevel[]"
            }
        },
        "StatementUse": {
            "parent": "Statement",
            "parameters": {
                "from": "string"
            }
        },
        "StatementUseAlias": {
            "parent": "StatementUse",
            "parameters": {
                "alias": "string"
            }
        },
        "StatementUseDestructuring": {
            "parent": "StatementUse",
            "parameters": {
                "pattern": "SyntaxDestructuringPattern"
            }
        },
        "StatementTopLevel": {
            "parent": "Statement",
            "parameters": {
                "modifiers": "SyntaxModifier[]",
                "statement": "SyntaxStatement"
            }
        },
        "Type": {
            "parent": "Node"
        },
        "TypeDeclarator": {
            "parent": "Node",
            "parameters": {
                "name": "string",
                "type": "SyntaxType"
            }
        },
        "TypeReference": {
            "parent": "Type",
            "parameters": {
                "name": "string",
                "arguments": "SyntaxTypeReference[]"
            }
        },
        "TypeParameter": {
            "parent": "Type",
            "parameters": {
                "name": "string",
                "constraint": "Option<SyntaxTypeReference>"
            }
        },
        "Expression": {
            "parent": "Node"
        },
        "ExpressionLiteral": {
            "parent": "Expression"
        },
        "ExpressionLiteralDouble": {
            "parent": "ExpressionLiteral",
            "parameters": {
                "value": "double"
            }
        },
        "ExpressionLiteralInteger": {
            "parent": "ExpressionLiteral",
            "parameters": {
                "value": "int"
            }
        },
        "ExpressionLiteralBoolean": {
            "parent": "ExpressionLiteral",
            "parameters": {
                "value": "bool"
            }
        },
        "ExpressionLiteralString": {
            "parent": "ExpressionLiteral",
            "parameters": {
                "value": "string"
            }
        },
        "ExpressionLiteralIdentifier": {
            "parent": "ExpressionLiteral",
            "parameters": {
                "name": "string"
            }
        },
        "ExpressionIf": {
            "parent": "Expression",
            "parameters": {
                "condition": "SyntaxExpression",
                "then": "SyntaxExpression",
                "else": "SyntaxExpression"
            }
        },
        "ExpressionBinary": {
            "parent": "Expression",
            "parameters": {
                "operator": "string",
                "left": "SyntaxExpression",
                "right": "SyntaxExpression"
            }
        },
        "ExpressionUnary": {
            "parent": "Expression",
            "parameters": {
                "operator": "string",
                "value": "SyntaxExpression"
            }
        },
        "ExpressionPostfix": {
            "parent": "Expression"
        },
        "ExpressionCall": {
            "parent": "ExpressionPostfix",
            "parameters": {
                "callee": "SyntaxExpression",
                "typeParameters": "SyntaxTypeReference[]",
                "parameters": "SyntaxExpression[]"
            }
        },
        "ExpressionMember": {
            "parent": "ExpressionPostfix",
            "parameters": {
                "callee": "SyntaxExpression",
                "index": "SyntaxExpression"
            }
        },
        "ExpressionProperty": {
            "parent": "ExpressionPostfix",
            "parameters": {
                "left": "SyntaxExpression",
                "name": "string"
            }
        },
        "ExpressionAs": {
            "parent": "Expression",
            "parameters": {
                "expression": "SyntaxExpression",
                "type": "SyntaxTypeReference"
            }
        }
    }
}